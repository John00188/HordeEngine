name: Build HordeEngine

on:
  push:
    tags: ['v*']
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Discover projects
      id: discover
      shell: pwsh
      run: |
        $client = Get-ChildItem -Recurse -Filter 'gmcl_hordeengine_win64.vcxproj' | Select-Object -First 1 -ExpandProperty FullName
        $server = Get-ChildItem -Recurse -Filter 'gmsv_hordeengine_win64.vcxproj' | Select-Object -First 1 -ExpandProperty FullName

        if ($client) { "CLIENT=$client" | Out-File -Append -FilePath $env:GITHUB_ENV; "HAS_CLIENT=true" | Out-File -Append -FilePath $env:GITHUB_ENV }
        else { "HAS_CLIENT=false" | Out-File -Append -FilePath $env:GITHUB_ENV }

        if ($server) { "SERVER=$server" | Out-File -Append -FilePath $env:GITHUB_ENV; "HAS_SERVER=true" | Out-File -Append -FilePath $env:GITHUB_ENV }
        else { "HAS_SERVER=false" | Out-File -Append -FilePath $env:GITHUB_ENV }

        if (-not $client -and -not $server) { throw "No .vcxproj files found." }

    - name: Build Client DLL (Release x64)
      if: env.HAS_CLIENT == 'true'
      shell: pwsh
      run: msbuild "$env:CLIENT" /m /p:Configuration=Release /p:Platform=x64

    - name: Build Server DLL (Release x64)
      if: env.HAS_SERVER == 'true'
      shell: pwsh
      run: msbuild "$env:SERVER" /m /p:Configuration=Release /p:Platform=x64

    - name: Upload client DLL
      if: env.HAS_CLIENT == 'true'
      uses: softprops/action-gh-release@v1
      with:
        files: "**/Release/gmcl_hordeengine_win64.dll"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload server DLL
      if: env.HAS_SERVER == 'true'
      uses: softprops/action-gh-release@v1
      with:
        files: "**/Release/gmsv_hordeengine_win64.dll"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
